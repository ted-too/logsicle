@import url("https://fonts.googleapis.com/css2?family=Geist+Mono:wght@100..900&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");
@import "tailwindcss";

@plugin 'tailwindcss-animate';

@plugin "tailwindcss-animate";

@custom-variant dark (&:is(.dark *));

@theme {
	--font-sans: "Inter", sans-serif;
	--font-mono: "Geist Mono", sans-serif;

	--radius-lg: var(--radius);
	--radius-md: calc(var(--radius) - 2px);
	--radius-sm: calc(var(--radius) - 4px);

	--color-lemonade: #ffe6d9;
	--color-pink: #ff3363;
	--color-background: var(--background);
	--color-foreground: var(--foreground);

	--color-card: var(--card);
	--color-card-foreground: var(--card-foreground);

	--color-popover: var(--popover);
	--color-popover-foreground: var(--popover-foreground);

	--color-primary: var(--primary);
	--color-primary-foreground: var(--primary-foreground);

	--color-secondary: var(--secondary);
	--color-secondary-foreground: var(--secondary-foreground);

	--color-muted: var(--muted);
	--color-muted-foreground: var(--muted-foreground);

	--color-accent: var(--accent);
	--color-accent-foreground: var(--accent-foreground);

	--color-destructive: var(--destructive);
	--color-destructive-foreground: var(--destructive-foreground);

	--color-border: var(--border);
	--color-input: var(--input);
	--color-ring: var(--ring);

	--color-chart-1: var(--chart-1);
	--color-chart-2: var(--chart-2);
	--color-chart-3: var(--chart-3);
	--color-chart-4: var(--chart-4);
	--color-chart-5: var(--chart-5);

	--color-sidebar: var(--sidebar-background);
	--color-sidebar-foreground: var(--sidebar-foreground);
	--color-sidebar-primary: var(--sidebar-primary);
	--color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
	--color-sidebar-accent: var(--sidebar-accent);
	--color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
	--color-sidebar-border: var(--sidebar-border);
	--color-sidebar-ring: var(--sidebar-ring);

	--color-caribbean: #216869;
	--color-success: var(--muted);
	--color-warning: var(--warning); 
	--color-error: var(--error);
	--color-info: var(--info);

	--animate-accordion-down: accordion-down 0.2s ease-out;
	--animate-accordion-up: accordion-up 0.2s ease-out;

	@keyframes accordion-down {
		from {
			height: 0;
		}
		to {
			height: var(--radix-accordion-content-height);
		}
	}
	@keyframes accordion-up {
		from {
			height: var(--radix-accordion-content-height);
		}
		to {
			height: 0;
		}
	}
}

@theme inline {
	/* Fatal */
	--log-fatal-bg: var(--color-red-400);
	--log-fatal-border: var(--color-red-600);
	--log-fatal-dot: var(--color-red-600);

	/* Error */
	--log-error-bg: var(--color-red-100);
	--log-error-border: var(--color-red-300);
	--log-error-dot: var(--color-purple-600);

	/* Warning */
	--log-warning-bg: var(--color-amber-100);
	--log-warning-border: var(--color-amber-300);
	--log-warning-dot: var(--color-amber-600);

	/* Info */
	--log-info-bg: var(--color-green-100);
	--log-info-border: var(--color-green-300);
	--log-info-dot: var(--color-green-600);

	/* Debug */
	--log-debug-bg: var(--color-sky-100);
	--log-debug-border: var(--color-sky-300);
	--log-debug-dot: var(--color-sky-600);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}

	body {
		@apply bg-background text-foreground;
	}

	div:has(
			> :is(input, div, button)[required],
			> :is(input, div, label, button)[aria-required="true"]
		)
		label::after {
		content: "*";
		color: var(--color-destructive, red);
		margin-left: 2px;
	}

	.channel-button[data-active="true"] {
		background-color: color-mix(
			in oklab,
			var(--channel-color) 10%,
			var(--color-background)
		) !important;
		color: color-mix(
			in oklab,
			var(--channel-color) 60%,
			var(--color-foreground)
		) !important;
	}
	.channel-button:hover {
		background-color: color-mix(
			in oklab,
			var(--channel-color) 5%,
			var(--color-background)
		) !important;
	}

	.channel-badge {
		background-color: color-mix(
			in oklab,
			var(--channel-color) 30%,
			var(--color-background)
		) !important;
		color: color-mix(
			in oklab,
			var(--channel-color) 80%,
			var(--color-foreground)
		) !important;
	}

	/* Timestamp dot styles */
	.app-log-timestamp[data-level]::before {
		content: var(--tw-content);
	}

	.app-log-timestamp[data-level="error"]::before {
		background-color: var(--log-error-dot) !important;
	}

	.app-log-timestamp[data-level="fatal"]::before {
		background-color: var(--log-fatal-dot) !important;
	}

	.app-log-timestamp[data-level="warning"]::before {
		background-color: var(--log-warning-dot) !important;
	}

	.app-log-timestamp[data-level="info"]::before {
		background-color: var(--log-info-dot) !important;
	}

	.app-log-timestamp[data-level="debug"]::before {
		background-color: var(--log-debug-dot) !important;
	}

	/* Level badge styles */
	.app-log-level[data-level="fatal"] {
		color: var(--color-background) !important;
		background-color: var(--log-fatal-bg) !important;
		border-color: var(--log-fatal-border) !important;
	}

	.app-log-level[data-level="error"] {
		background-color: var(--log-error-bg) !important;
		border-color: var(--log-error-border) !important;
	}

	.app-log-level[data-level="warning"] {
		background-color: var(--log-warning-bg) !important;
		border-color: var(--log-warning-border) !important;
	}

	.app-log-level[data-level="info"] {
		background-color: var(--log-info-bg) !important;
		border-color: var(--log-info-border) !important;
	}

	.app-log-level[data-level="debug"] {
		background-color: var(--log-debug-bg) !important;
		border-color: var(--log-debug-border) !important;
	}

	:root {
		--background: oklch(1 0 0);
		--foreground: oklch(0.145 0 0);
		--card: oklch(1 0 0);
		--card-foreground: oklch(0.145 0 0);
		--popover: oklch(1 0 0);
		--popover-foreground: oklch(0.145 0 0);
		--primary: oklch(0.205 0 0);
		--primary-foreground: oklch(0.985 0 0);
		--secondary: oklch(0.97 0 0);
		--secondary-foreground: oklch(0.205 0 0);
		--muted: oklch(0.97 0 0);
		--muted-foreground: oklch(0.556 0 0);
		--accent: oklch(0.97 0 0);
		--accent-foreground: oklch(0.205 0 0);
		--destructive: oklch(0.577 0.245 27.325);
		--destructive-foreground: oklch(0.577 0.245 27.325);
		--border: oklch(0.922 0 0);
		--input: oklch(0.922 0 0);
		--ring: oklch(0.708 0 0);
		--chart-1: oklch(0.646 0.222 41.116);
		--chart-2: oklch(0.6 0.118 184.704);
		--chart-3: oklch(0.398 0.07 227.392);
		--chart-4: oklch(0.828 0.189 84.429);
		--chart-5: oklch(0.769 0.188 70.08);
		--radius: 0.5rem;
		--sidebar: oklch(0.985 0 0);
		--sidebar-foreground: oklch(0.145 0 0);
		--sidebar-primary: oklch(0.205 0 0);
		--sidebar-primary-foreground: oklch(0.985 0 0);
		--sidebar-accent: oklch(0.97 0 0);
		--sidebar-accent-foreground: oklch(0.205 0 0);
		--sidebar-border: oklch(0.922 0 0);
		--sidebar-ring: oklch(0.708 0 0);

		--warning: 24.6 95% 53.1%;
    --error: 0 84.2% 60.2%;
    --info: 198.63 88.66% 48.43%
	}

	.dark {
		--background: oklch(0.145 0 0);
		--foreground: oklch(0.985 0 0);
		--card: oklch(0.145 0 0);
		--card-foreground: oklch(0.985 0 0);
		--popover: oklch(0.145 0 0);
		--popover-foreground: oklch(0.985 0 0);
		--primary: oklch(0.985 0 0);
		--primary-foreground: oklch(0.205 0 0);
		--secondary: oklch(0.269 0 0);
		--secondary-foreground: oklch(0.985 0 0);
		--muted: oklch(0.269 0 0);
		--muted-foreground: oklch(0.708 0 0);
		--accent: oklch(0.269 0 0);
		--accent-foreground: oklch(0.985 0 0);
		--destructive: oklch(0.396 0.141 25.723);
		--destructive-foreground: oklch(0.637 0.237 25.331);
		--border: oklch(0.269 0 0);
		--input: oklch(0.269 0 0);
		--ring: oklch(0.439 0 0);
		--chart-1: oklch(0.488 0.243 264.376);
		--chart-2: oklch(0.696 0.17 162.48);
		--chart-3: oklch(0.769 0.188 70.08);
		--chart-4: oklch(0.627 0.265 303.9);
		--chart-5: oklch(0.645 0.246 16.439);
		--sidebar: oklch(0.205 0 0);
		--sidebar-foreground: oklch(0.985 0 0);
		--sidebar-primary: oklch(0.488 0.243 264.376);
		--sidebar-primary-foreground: oklch(0.985 0 0);
		--sidebar-accent: oklch(0.269 0 0);
		--sidebar-accent-foreground: oklch(0.985 0 0);
		--sidebar-border: oklch(0.269 0 0);
		--sidebar-ring: oklch(0.439 0 0);

		--warning: 24.6 95% 53.1%;
    --error: 0 84.2% 60.2%;
    --info: 198.63 88.66% 48.43%
	}
}

@layer base {
	* {
		@apply border-border outline-ring/50;
	}
	body {
		@apply bg-background text-foreground;
	}
}
