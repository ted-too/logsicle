/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthdImport } from './routes/_authd'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthdOrgSlugOnboardingImport } from './routes/_authd/$orgSlug/_onboarding'
import { Route as AuthdOrgSlugOnboardingIndexImport } from './routes/_authd/$orgSlug/_onboarding/index'
import { Route as AuthdOrgSlugOnboardingOnboardingImport } from './routes/_authd/$orgSlug/_onboarding/onboarding'
import { Route as AuthdOrgSlugProjSlugDashboardImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard'
import { Route as AuthdOrgSlugProjSlugDashboardIndexImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/index'
import { Route as AuthdOrgSlugProjSlugDashboardTracesImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/traces'
import { Route as AuthdOrgSlugProjSlugDashboardTestImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/test'
import { Route as AuthdOrgSlugProjSlugDashboardSettingsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/settings'
import { Route as AuthdOrgSlugProjSlugDashboardRequestLogsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/request-logs'
import { Route as AuthdOrgSlugProjSlugDashboardMetricsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/metrics'
import { Route as AuthdOrgSlugProjSlugDashboardEventsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/events'
import { Route as AuthdOrgSlugProjSlugDashboardAppLogsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/app-logs'
import { Route as AuthdOrgSlugProjSlugDashboardAlertsImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/alerts'
import { Route as AuthdOrgSlugProjSlugDashboardSettingsProjectImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/settings.project'
import { Route as AuthdOrgSlugProjSlugDashboardSettingsProfileImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/settings.profile'
import { Route as AuthdOrgSlugProjSlugDashboardSettingsOrganizationImport } from './routes/_authd/$orgSlug/$projSlug/_dashboard/settings.organization'

// Create Virtual Routes

const AuthdOrgSlugImport = createFileRoute('/_authd/$orgSlug')()
const AuthdOrgSlugProjSlugImport = createFileRoute(
  '/_authd/$orgSlug/$projSlug',
)()

// Create/Update Routes

const AuthdRoute = AuthdImport.update({
  id: '/_authd',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthdOrgSlugRoute = AuthdOrgSlugImport.update({
  id: '/$orgSlug',
  path: '/$orgSlug',
  getParentRoute: () => AuthdRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)

const AuthdOrgSlugProjSlugRoute = AuthdOrgSlugProjSlugImport.update({
  id: '/$projSlug',
  path: '/$projSlug',
  getParentRoute: () => AuthdOrgSlugRoute,
} as any)

const AuthdOrgSlugOnboardingRoute = AuthdOrgSlugOnboardingImport.update({
  id: '/_onboarding',
  getParentRoute: () => AuthdOrgSlugRoute,
} as any)

const AuthdOrgSlugOnboardingIndexRoute =
  AuthdOrgSlugOnboardingIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthdOrgSlugOnboardingRoute,
  } as any)

const AuthdOrgSlugOnboardingOnboardingRoute =
  AuthdOrgSlugOnboardingOnboardingImport.update({
    id: '/onboarding',
    path: '/onboarding',
    getParentRoute: () => AuthdOrgSlugOnboardingRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardRoute =
  AuthdOrgSlugProjSlugDashboardImport.update({
    id: '/_dashboard',
    getParentRoute: () => AuthdOrgSlugProjSlugRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardIndexRoute =
  AuthdOrgSlugProjSlugDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardTracesRoute =
  AuthdOrgSlugProjSlugDashboardTracesImport.update({
    id: '/traces',
    path: '/traces',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardTestRoute =
  AuthdOrgSlugProjSlugDashboardTestImport.update({
    id: '/test',
    path: '/test',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardSettingsRoute =
  AuthdOrgSlugProjSlugDashboardSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardRequestLogsRoute =
  AuthdOrgSlugProjSlugDashboardRequestLogsImport.update({
    id: '/request-logs',
    path: '/request-logs',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardMetricsRoute =
  AuthdOrgSlugProjSlugDashboardMetricsImport.update({
    id: '/metrics',
    path: '/metrics',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardEventsRoute =
  AuthdOrgSlugProjSlugDashboardEventsImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardAppLogsRoute =
  AuthdOrgSlugProjSlugDashboardAppLogsImport.update({
    id: '/app-logs',
    path: '/app-logs',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardAlertsRoute =
  AuthdOrgSlugProjSlugDashboardAlertsImport.update({
    id: '/alerts',
    path: '/alerts',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardSettingsProjectRoute =
  AuthdOrgSlugProjSlugDashboardSettingsProjectImport.update({
    id: '/project',
    path: '/project',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardSettingsRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardSettingsProfileRoute =
  AuthdOrgSlugProjSlugDashboardSettingsProfileImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardSettingsRoute,
  } as any)

const AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute =
  AuthdOrgSlugProjSlugDashboardSettingsOrganizationImport.update({
    id: '/organization',
    path: '/organization',
    getParentRoute: () => AuthdOrgSlugProjSlugDashboardSettingsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_authd': {
      id: '/_authd'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthdImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_authd/$orgSlug': {
      id: '/_authd/$orgSlug'
      path: '/$orgSlug'
      fullPath: '/$orgSlug'
      preLoaderRoute: typeof AuthdOrgSlugImport
      parentRoute: typeof AuthdImport
    }
    '/_authd/$orgSlug/_onboarding': {
      id: '/_authd/$orgSlug/_onboarding'
      path: '/$orgSlug'
      fullPath: '/$orgSlug'
      preLoaderRoute: typeof AuthdOrgSlugOnboardingImport
      parentRoute: typeof AuthdOrgSlugRoute
    }
    '/_authd/$orgSlug/$projSlug': {
      id: '/_authd/$orgSlug/$projSlug'
      path: '/$projSlug'
      fullPath: '/$orgSlug/$projSlug'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugImport
      parentRoute: typeof AuthdOrgSlugImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard'
      path: '/$projSlug'
      fullPath: '/$orgSlug/$projSlug'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardImport
      parentRoute: typeof AuthdOrgSlugProjSlugRoute
    }
    '/_authd/$orgSlug/_onboarding/onboarding': {
      id: '/_authd/$orgSlug/_onboarding/onboarding'
      path: '/onboarding'
      fullPath: '/$orgSlug/onboarding'
      preLoaderRoute: typeof AuthdOrgSlugOnboardingOnboardingImport
      parentRoute: typeof AuthdOrgSlugOnboardingImport
    }
    '/_authd/$orgSlug/_onboarding/': {
      id: '/_authd/$orgSlug/_onboarding/'
      path: '/'
      fullPath: '/$orgSlug/'
      preLoaderRoute: typeof AuthdOrgSlugOnboardingIndexImport
      parentRoute: typeof AuthdOrgSlugOnboardingImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/alerts': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/alerts'
      path: '/alerts'
      fullPath: '/$orgSlug/$projSlug/alerts'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardAlertsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/app-logs': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/app-logs'
      path: '/app-logs'
      fullPath: '/$orgSlug/$projSlug/app-logs'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardAppLogsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/events': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/events'
      path: '/events'
      fullPath: '/$orgSlug/$projSlug/events'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardEventsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/metrics': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/metrics'
      path: '/metrics'
      fullPath: '/$orgSlug/$projSlug/metrics'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardMetricsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/request-logs': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/request-logs'
      path: '/request-logs'
      fullPath: '/$orgSlug/$projSlug/request-logs'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardRequestLogsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/settings': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/settings'
      path: '/settings'
      fullPath: '/$orgSlug/$projSlug/settings'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/test': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/test'
      path: '/test'
      fullPath: '/$orgSlug/$projSlug/test'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardTestImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/traces': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/traces'
      path: '/traces'
      fullPath: '/$orgSlug/$projSlug/traces'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardTracesImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/'
      path: '/'
      fullPath: '/$orgSlug/$projSlug/'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardIndexImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/settings/organization': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/settings/organization'
      path: '/organization'
      fullPath: '/$orgSlug/$projSlug/settings/organization'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsOrganizationImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/settings/profile': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/settings/profile'
      path: '/profile'
      fullPath: '/$orgSlug/$projSlug/settings/profile'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsProfileImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsImport
    }
    '/_authd/$orgSlug/$projSlug/_dashboard/settings/project': {
      id: '/_authd/$orgSlug/$projSlug/_dashboard/settings/project'
      path: '/project'
      fullPath: '/$orgSlug/$projSlug/settings/project'
      preLoaderRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsProjectImport
      parentRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignUpRoute: AuthSignUpRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthdOrgSlugOnboardingRouteChildren {
  AuthdOrgSlugOnboardingOnboardingRoute: typeof AuthdOrgSlugOnboardingOnboardingRoute
  AuthdOrgSlugOnboardingIndexRoute: typeof AuthdOrgSlugOnboardingIndexRoute
}

const AuthdOrgSlugOnboardingRouteChildren: AuthdOrgSlugOnboardingRouteChildren =
  {
    AuthdOrgSlugOnboardingOnboardingRoute:
      AuthdOrgSlugOnboardingOnboardingRoute,
    AuthdOrgSlugOnboardingIndexRoute: AuthdOrgSlugOnboardingIndexRoute,
  }

const AuthdOrgSlugOnboardingRouteWithChildren =
  AuthdOrgSlugOnboardingRoute._addFileChildren(
    AuthdOrgSlugOnboardingRouteChildren,
  )

interface AuthdOrgSlugProjSlugDashboardSettingsRouteChildren {
  AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute
  AuthdOrgSlugProjSlugDashboardSettingsProfileRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsProfileRoute
  AuthdOrgSlugProjSlugDashboardSettingsProjectRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsProjectRoute
}

const AuthdOrgSlugProjSlugDashboardSettingsRouteChildren: AuthdOrgSlugProjSlugDashboardSettingsRouteChildren =
  {
    AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute:
      AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute,
    AuthdOrgSlugProjSlugDashboardSettingsProfileRoute:
      AuthdOrgSlugProjSlugDashboardSettingsProfileRoute,
    AuthdOrgSlugProjSlugDashboardSettingsProjectRoute:
      AuthdOrgSlugProjSlugDashboardSettingsProjectRoute,
  }

const AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren =
  AuthdOrgSlugProjSlugDashboardSettingsRoute._addFileChildren(
    AuthdOrgSlugProjSlugDashboardSettingsRouteChildren,
  )

interface AuthdOrgSlugProjSlugDashboardRouteChildren {
  AuthdOrgSlugProjSlugDashboardAlertsRoute: typeof AuthdOrgSlugProjSlugDashboardAlertsRoute
  AuthdOrgSlugProjSlugDashboardAppLogsRoute: typeof AuthdOrgSlugProjSlugDashboardAppLogsRoute
  AuthdOrgSlugProjSlugDashboardEventsRoute: typeof AuthdOrgSlugProjSlugDashboardEventsRoute
  AuthdOrgSlugProjSlugDashboardMetricsRoute: typeof AuthdOrgSlugProjSlugDashboardMetricsRoute
  AuthdOrgSlugProjSlugDashboardRequestLogsRoute: typeof AuthdOrgSlugProjSlugDashboardRequestLogsRoute
  AuthdOrgSlugProjSlugDashboardSettingsRoute: typeof AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren
  AuthdOrgSlugProjSlugDashboardTestRoute: typeof AuthdOrgSlugProjSlugDashboardTestRoute
  AuthdOrgSlugProjSlugDashboardTracesRoute: typeof AuthdOrgSlugProjSlugDashboardTracesRoute
  AuthdOrgSlugProjSlugDashboardIndexRoute: typeof AuthdOrgSlugProjSlugDashboardIndexRoute
}

const AuthdOrgSlugProjSlugDashboardRouteChildren: AuthdOrgSlugProjSlugDashboardRouteChildren =
  {
    AuthdOrgSlugProjSlugDashboardAlertsRoute:
      AuthdOrgSlugProjSlugDashboardAlertsRoute,
    AuthdOrgSlugProjSlugDashboardAppLogsRoute:
      AuthdOrgSlugProjSlugDashboardAppLogsRoute,
    AuthdOrgSlugProjSlugDashboardEventsRoute:
      AuthdOrgSlugProjSlugDashboardEventsRoute,
    AuthdOrgSlugProjSlugDashboardMetricsRoute:
      AuthdOrgSlugProjSlugDashboardMetricsRoute,
    AuthdOrgSlugProjSlugDashboardRequestLogsRoute:
      AuthdOrgSlugProjSlugDashboardRequestLogsRoute,
    AuthdOrgSlugProjSlugDashboardSettingsRoute:
      AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren,
    AuthdOrgSlugProjSlugDashboardTestRoute:
      AuthdOrgSlugProjSlugDashboardTestRoute,
    AuthdOrgSlugProjSlugDashboardTracesRoute:
      AuthdOrgSlugProjSlugDashboardTracesRoute,
    AuthdOrgSlugProjSlugDashboardIndexRoute:
      AuthdOrgSlugProjSlugDashboardIndexRoute,
  }

const AuthdOrgSlugProjSlugDashboardRouteWithChildren =
  AuthdOrgSlugProjSlugDashboardRoute._addFileChildren(
    AuthdOrgSlugProjSlugDashboardRouteChildren,
  )

interface AuthdOrgSlugProjSlugRouteChildren {
  AuthdOrgSlugProjSlugDashboardRoute: typeof AuthdOrgSlugProjSlugDashboardRouteWithChildren
}

const AuthdOrgSlugProjSlugRouteChildren: AuthdOrgSlugProjSlugRouteChildren = {
  AuthdOrgSlugProjSlugDashboardRoute:
    AuthdOrgSlugProjSlugDashboardRouteWithChildren,
}

const AuthdOrgSlugProjSlugRouteWithChildren =
  AuthdOrgSlugProjSlugRoute._addFileChildren(AuthdOrgSlugProjSlugRouteChildren)

interface AuthdOrgSlugRouteChildren {
  AuthdOrgSlugOnboardingRoute: typeof AuthdOrgSlugOnboardingRouteWithChildren
  AuthdOrgSlugProjSlugRoute: typeof AuthdOrgSlugProjSlugRouteWithChildren
}

const AuthdOrgSlugRouteChildren: AuthdOrgSlugRouteChildren = {
  AuthdOrgSlugOnboardingRoute: AuthdOrgSlugOnboardingRouteWithChildren,
  AuthdOrgSlugProjSlugRoute: AuthdOrgSlugProjSlugRouteWithChildren,
}

const AuthdOrgSlugRouteWithChildren = AuthdOrgSlugRoute._addFileChildren(
  AuthdOrgSlugRouteChildren,
)

interface AuthdRouteChildren {
  AuthdOrgSlugRoute: typeof AuthdOrgSlugRouteWithChildren
}

const AuthdRouteChildren: AuthdRouteChildren = {
  AuthdOrgSlugRoute: AuthdOrgSlugRouteWithChildren,
}

const AuthdRouteWithChildren = AuthdRoute._addFileChildren(AuthdRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthdRouteWithChildren
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthIndexRoute
  '/$orgSlug': typeof AuthdOrgSlugOnboardingRouteWithChildren
  '/$orgSlug/$projSlug': typeof AuthdOrgSlugProjSlugDashboardRouteWithChildren
  '/$orgSlug/onboarding': typeof AuthdOrgSlugOnboardingOnboardingRoute
  '/$orgSlug/': typeof AuthdOrgSlugOnboardingIndexRoute
  '/$orgSlug/$projSlug/alerts': typeof AuthdOrgSlugProjSlugDashboardAlertsRoute
  '/$orgSlug/$projSlug/app-logs': typeof AuthdOrgSlugProjSlugDashboardAppLogsRoute
  '/$orgSlug/$projSlug/events': typeof AuthdOrgSlugProjSlugDashboardEventsRoute
  '/$orgSlug/$projSlug/metrics': typeof AuthdOrgSlugProjSlugDashboardMetricsRoute
  '/$orgSlug/$projSlug/request-logs': typeof AuthdOrgSlugProjSlugDashboardRequestLogsRoute
  '/$orgSlug/$projSlug/settings': typeof AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren
  '/$orgSlug/$projSlug/test': typeof AuthdOrgSlugProjSlugDashboardTestRoute
  '/$orgSlug/$projSlug/traces': typeof AuthdOrgSlugProjSlugDashboardTracesRoute
  '/$orgSlug/$projSlug/': typeof AuthdOrgSlugProjSlugDashboardIndexRoute
  '/$orgSlug/$projSlug/settings/organization': typeof AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute
  '/$orgSlug/$projSlug/settings/profile': typeof AuthdOrgSlugProjSlugDashboardSettingsProfileRoute
  '/$orgSlug/$projSlug/settings/project': typeof AuthdOrgSlugProjSlugDashboardSettingsProjectRoute
}

export interface FileRoutesByTo {
  '': typeof AuthdRouteWithChildren
  '/sign-up': typeof AuthSignUpRoute
  '/': typeof AuthIndexRoute
  '/$orgSlug': typeof AuthdOrgSlugOnboardingIndexRoute
  '/$orgSlug/$projSlug': typeof AuthdOrgSlugProjSlugDashboardIndexRoute
  '/$orgSlug/onboarding': typeof AuthdOrgSlugOnboardingOnboardingRoute
  '/$orgSlug/$projSlug/alerts': typeof AuthdOrgSlugProjSlugDashboardAlertsRoute
  '/$orgSlug/$projSlug/app-logs': typeof AuthdOrgSlugProjSlugDashboardAppLogsRoute
  '/$orgSlug/$projSlug/events': typeof AuthdOrgSlugProjSlugDashboardEventsRoute
  '/$orgSlug/$projSlug/metrics': typeof AuthdOrgSlugProjSlugDashboardMetricsRoute
  '/$orgSlug/$projSlug/request-logs': typeof AuthdOrgSlugProjSlugDashboardRequestLogsRoute
  '/$orgSlug/$projSlug/settings': typeof AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren
  '/$orgSlug/$projSlug/test': typeof AuthdOrgSlugProjSlugDashboardTestRoute
  '/$orgSlug/$projSlug/traces': typeof AuthdOrgSlugProjSlugDashboardTracesRoute
  '/$orgSlug/$projSlug/settings/organization': typeof AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute
  '/$orgSlug/$projSlug/settings/profile': typeof AuthdOrgSlugProjSlugDashboardSettingsProfileRoute
  '/$orgSlug/$projSlug/settings/project': typeof AuthdOrgSlugProjSlugDashboardSettingsProjectRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_authd': typeof AuthdRouteWithChildren
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_auth/': typeof AuthIndexRoute
  '/_authd/$orgSlug': typeof AuthdOrgSlugRouteWithChildren
  '/_authd/$orgSlug/_onboarding': typeof AuthdOrgSlugOnboardingRouteWithChildren
  '/_authd/$orgSlug/$projSlug': typeof AuthdOrgSlugProjSlugRouteWithChildren
  '/_authd/$orgSlug/$projSlug/_dashboard': typeof AuthdOrgSlugProjSlugDashboardRouteWithChildren
  '/_authd/$orgSlug/_onboarding/onboarding': typeof AuthdOrgSlugOnboardingOnboardingRoute
  '/_authd/$orgSlug/_onboarding/': typeof AuthdOrgSlugOnboardingIndexRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/alerts': typeof AuthdOrgSlugProjSlugDashboardAlertsRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/app-logs': typeof AuthdOrgSlugProjSlugDashboardAppLogsRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/events': typeof AuthdOrgSlugProjSlugDashboardEventsRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/metrics': typeof AuthdOrgSlugProjSlugDashboardMetricsRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/request-logs': typeof AuthdOrgSlugProjSlugDashboardRequestLogsRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/settings': typeof AuthdOrgSlugProjSlugDashboardSettingsRouteWithChildren
  '/_authd/$orgSlug/$projSlug/_dashboard/test': typeof AuthdOrgSlugProjSlugDashboardTestRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/traces': typeof AuthdOrgSlugProjSlugDashboardTracesRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/': typeof AuthdOrgSlugProjSlugDashboardIndexRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/settings/organization': typeof AuthdOrgSlugProjSlugDashboardSettingsOrganizationRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/settings/profile': typeof AuthdOrgSlugProjSlugDashboardSettingsProfileRoute
  '/_authd/$orgSlug/$projSlug/_dashboard/settings/project': typeof AuthdOrgSlugProjSlugDashboardSettingsProjectRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/sign-up'
    | '/'
    | '/$orgSlug'
    | '/$orgSlug/$projSlug'
    | '/$orgSlug/onboarding'
    | '/$orgSlug/'
    | '/$orgSlug/$projSlug/alerts'
    | '/$orgSlug/$projSlug/app-logs'
    | '/$orgSlug/$projSlug/events'
    | '/$orgSlug/$projSlug/metrics'
    | '/$orgSlug/$projSlug/request-logs'
    | '/$orgSlug/$projSlug/settings'
    | '/$orgSlug/$projSlug/test'
    | '/$orgSlug/$projSlug/traces'
    | '/$orgSlug/$projSlug/'
    | '/$orgSlug/$projSlug/settings/organization'
    | '/$orgSlug/$projSlug/settings/profile'
    | '/$orgSlug/$projSlug/settings/project'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/sign-up'
    | '/'
    | '/$orgSlug'
    | '/$orgSlug/$projSlug'
    | '/$orgSlug/onboarding'
    | '/$orgSlug/$projSlug/alerts'
    | '/$orgSlug/$projSlug/app-logs'
    | '/$orgSlug/$projSlug/events'
    | '/$orgSlug/$projSlug/metrics'
    | '/$orgSlug/$projSlug/request-logs'
    | '/$orgSlug/$projSlug/settings'
    | '/$orgSlug/$projSlug/test'
    | '/$orgSlug/$projSlug/traces'
    | '/$orgSlug/$projSlug/settings/organization'
    | '/$orgSlug/$projSlug/settings/profile'
    | '/$orgSlug/$projSlug/settings/project'
  id:
    | '__root__'
    | '/_auth'
    | '/_authd'
    | '/_auth/sign-up'
    | '/_auth/'
    | '/_authd/$orgSlug'
    | '/_authd/$orgSlug/_onboarding'
    | '/_authd/$orgSlug/$projSlug'
    | '/_authd/$orgSlug/$projSlug/_dashboard'
    | '/_authd/$orgSlug/_onboarding/onboarding'
    | '/_authd/$orgSlug/_onboarding/'
    | '/_authd/$orgSlug/$projSlug/_dashboard/alerts'
    | '/_authd/$orgSlug/$projSlug/_dashboard/app-logs'
    | '/_authd/$orgSlug/$projSlug/_dashboard/events'
    | '/_authd/$orgSlug/$projSlug/_dashboard/metrics'
    | '/_authd/$orgSlug/$projSlug/_dashboard/request-logs'
    | '/_authd/$orgSlug/$projSlug/_dashboard/settings'
    | '/_authd/$orgSlug/$projSlug/_dashboard/test'
    | '/_authd/$orgSlug/$projSlug/_dashboard/traces'
    | '/_authd/$orgSlug/$projSlug/_dashboard/'
    | '/_authd/$orgSlug/$projSlug/_dashboard/settings/organization'
    | '/_authd/$orgSlug/$projSlug/_dashboard/settings/profile'
    | '/_authd/$orgSlug/$projSlug/_dashboard/settings/project'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthdRoute: typeof AuthdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthdRoute: AuthdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_authd"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/sign-up",
        "/_auth/"
      ]
    },
    "/_authd": {
      "filePath": "_authd.tsx",
      "children": [
        "/_authd/$orgSlug"
      ]
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_authd/$orgSlug": {
      "filePath": "_authd/$orgSlug",
      "parent": "/_authd",
      "children": [
        "/_authd/$orgSlug/_onboarding",
        "/_authd/$orgSlug/$projSlug"
      ]
    },
    "/_authd/$orgSlug/_onboarding": {
      "filePath": "_authd/$orgSlug/_onboarding.tsx",
      "parent": "/_authd/$orgSlug",
      "children": [
        "/_authd/$orgSlug/_onboarding/onboarding",
        "/_authd/$orgSlug/_onboarding/"
      ]
    },
    "/_authd/$orgSlug/$projSlug": {
      "filePath": "_authd/$orgSlug/$projSlug",
      "parent": "/_authd/$orgSlug",
      "children": [
        "/_authd/$orgSlug/$projSlug/_dashboard"
      ]
    },
    "/_authd/$orgSlug/$projSlug/_dashboard": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard.tsx",
      "parent": "/_authd/$orgSlug/$projSlug",
      "children": [
        "/_authd/$orgSlug/$projSlug/_dashboard/alerts",
        "/_authd/$orgSlug/$projSlug/_dashboard/app-logs",
        "/_authd/$orgSlug/$projSlug/_dashboard/events",
        "/_authd/$orgSlug/$projSlug/_dashboard/metrics",
        "/_authd/$orgSlug/$projSlug/_dashboard/request-logs",
        "/_authd/$orgSlug/$projSlug/_dashboard/settings",
        "/_authd/$orgSlug/$projSlug/_dashboard/test",
        "/_authd/$orgSlug/$projSlug/_dashboard/traces",
        "/_authd/$orgSlug/$projSlug/_dashboard/"
      ]
    },
    "/_authd/$orgSlug/_onboarding/onboarding": {
      "filePath": "_authd/$orgSlug/_onboarding/onboarding.tsx",
      "parent": "/_authd/$orgSlug/_onboarding"
    },
    "/_authd/$orgSlug/_onboarding/": {
      "filePath": "_authd/$orgSlug/_onboarding/index.tsx",
      "parent": "/_authd/$orgSlug/_onboarding"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/alerts": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/alerts.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/app-logs": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/app-logs.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/events": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/events.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/metrics": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/metrics.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/request-logs": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/request-logs.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/settings": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/settings.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard",
      "children": [
        "/_authd/$orgSlug/$projSlug/_dashboard/settings/organization",
        "/_authd/$orgSlug/$projSlug/_dashboard/settings/profile",
        "/_authd/$orgSlug/$projSlug/_dashboard/settings/project"
      ]
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/test": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/test.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/traces": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/traces.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/index.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/settings/organization": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/settings.organization.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard/settings"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/settings/profile": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/settings.profile.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard/settings"
    },
    "/_authd/$orgSlug/$projSlug/_dashboard/settings/project": {
      "filePath": "_authd/$orgSlug/$projSlug/_dashboard/settings.project.tsx",
      "parent": "/_authd/$orgSlug/$projSlug/_dashboard/settings"
    }
  }
}
ROUTE_MANIFEST_END */
