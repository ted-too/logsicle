/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthdImport } from './routes/_authd'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignOutImport } from './routes/auth/sign-out'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthdDashboardIndexImport } from './routes/_authd/dashboard/index'
import { Route as AuthdDashboardOnboardingImport } from './routes/_authd/dashboard/onboarding'

// Create/Update Routes

const AuthdRoute = AuthdImport.update({
  id: '/_authd',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignOutRoute = AuthSignOutImport.update({
  id: '/auth/sign-out',
  path: '/auth/sign-out',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthdDashboardIndexRoute = AuthdDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AuthdRoute,
} as any)

const AuthdDashboardOnboardingRoute = AuthdDashboardOnboardingImport.update({
  id: '/dashboard/onboarding',
  path: '/dashboard/onboarding',
  getParentRoute: () => AuthdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authd': {
      id: '/_authd'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthdImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-out': {
      id: '/auth/sign-out'
      path: '/auth/sign-out'
      fullPath: '/auth/sign-out'
      preLoaderRoute: typeof AuthSignOutImport
      parentRoute: typeof rootRoute
    }
    '/_authd/dashboard/onboarding': {
      id: '/_authd/dashboard/onboarding'
      path: '/dashboard/onboarding'
      fullPath: '/dashboard/onboarding'
      preLoaderRoute: typeof AuthdDashboardOnboardingImport
      parentRoute: typeof AuthdImport
    }
    '/_authd/dashboard/': {
      id: '/_authd/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthdDashboardIndexImport
      parentRoute: typeof AuthdImport
    }
  }
}

// Create and export the route tree

interface AuthdRouteChildren {
  AuthdDashboardOnboardingRoute: typeof AuthdDashboardOnboardingRoute
  AuthdDashboardIndexRoute: typeof AuthdDashboardIndexRoute
}

const AuthdRouteChildren: AuthdRouteChildren = {
  AuthdDashboardOnboardingRoute: AuthdDashboardOnboardingRoute,
  AuthdDashboardIndexRoute: AuthdDashboardIndexRoute,
}

const AuthdRouteWithChildren = AuthdRoute._addFileChildren(AuthdRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthdRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/dashboard/onboarding': typeof AuthdDashboardOnboardingRoute
  '/dashboard': typeof AuthdDashboardIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthdRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/dashboard/onboarding': typeof AuthdDashboardOnboardingRoute
  '/dashboard': typeof AuthdDashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authd': typeof AuthdRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/_authd/dashboard/onboarding': typeof AuthdDashboardOnboardingRoute
  '/_authd/dashboard/': typeof AuthdDashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/dashboard/onboarding'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/dashboard/onboarding'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_authd'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/_authd/dashboard/onboarding'
    | '/_authd/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthdRoute: typeof AuthdRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthdRoute: AuthdRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authd",
        "/auth/sign-in",
        "/auth/sign-out"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authd": {
      "filePath": "_authd.tsx",
      "children": [
        "/_authd/dashboard/onboarding",
        "/_authd/dashboard/"
      ]
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/auth/sign-out": {
      "filePath": "auth/sign-out.tsx"
    },
    "/_authd/dashboard/onboarding": {
      "filePath": "_authd/dashboard/onboarding.tsx",
      "parent": "/_authd"
    },
    "/_authd/dashboard/": {
      "filePath": "_authd/dashboard/index.tsx",
      "parent": "/_authd"
    }
  }
}
ROUTE_MANIFEST_END */
