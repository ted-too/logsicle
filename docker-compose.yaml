version: '3.8'

services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: logsicle-api
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
      - DB_DSN=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-logsicle}?sslmode=disable
      - DB_MAX_OPEN_CONNS=25
      - DB_MAX_IDLE_CONNS=25
      - DB_CONN_MAX_LIFETIME=15m
      - REDIS_URL=redis://redis:6379/0
      - REDIS_QUEUE_URL=redis://redis:6379/1
      - REDIS_SESSION_URL=redis://redis:6379/2
      - CORS_ALLOWED_ORIGINS=${SERVICE_URL_WEB:-http://localhost:3000}
      - CORS_COOKIE_DOMAIN=${SERVICE_COOKIE_DOMAIN}
      - AUTH_ENDPOINT=${AUTH_ENDPOINT}
      - AUTH_APP_ID=${AUTH_APP_ID}
      - AUTH_APP_SECRET=${AUTH_APP_SECRET}
      - AUTH_SIGN_IN_URL=${AUTH_SIGN_IN_URL}
      - AUTH_REDIRECT_URL=${SERVICE_URL_API}/api/v1/auth/callback
      - AUTH_FRONTEND_URL=${SERVICE_URL_WEB:-http://localhost:3000}
      - DEV=${DEV:-false}
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_started
    networks:
      - logsicle-network

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    container_name: logsicle-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PUBLIC_API_URL=${SERVICE_URL_API}
    depends_on:
      - api
    networks:
      - logsicle-network

  migrations:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.migrations
    container_name: logsicle-migrations
    command: [ "migrate", "apply", "--url", "postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-logsicle}?search_path=public&sslmode=disable" ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - logsicle-network
    # Coolify-specific option to exclude from healthchecks
    exclude_from_hc: true

  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: logsicle-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-logsicle}
    # ports:
    #   - "5432:5432"
    volumes:
      - logsicle_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-logsicle}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - logsicle-network

  redis:
    image: redis:7-alpine
    container_name: logsicle-redis
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - logsicle-network

networks:
  logsicle-network:
    driver: bridge

volumes:
  logsicle_postgres_data:
  redis_data:
